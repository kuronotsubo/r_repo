#/bin/bash

if [ $# -ne 0 ]; then
  echo "usage:" 1>&2
  echo "      dping -h" 1>&2
  echo "      Discover nodes on a specified network" 1>&2
  exit 1
fi

if [ $# -eq 0 ]; then
  echo "Enter network address" 1>&2
  echo "Example: 192.168.0.0/24" 1>&2
  while true
  do
  echo ""
  echo -n "Target=> "
  read str
  if [[ $str =~ ([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\/[0-9]{1,2}) ]] ;then 
    net_addr=`awk -F/ '{print $1}' <<< $str`
    prefix=`awk -F/ '{print $2}' <<< $str`
    p1=`awk -F. '{print $1}' <<< $net_addr`
    p2=`awk -F. '{print $2}' <<< $net_addr`
    p3=`awk -F. '{print $3}' <<< $net_addr`
    p4=`awk -F. '{print $4}' <<< $net_addr`
    echo -n "Target $net_addr/$prefix ?[y/n]"
    read line
    if [[ $line  =~ ([yY]) ]] ; then
      echo "ping...."
      break
    else
      echo -n "Do you want to re-enter ?[y/n]"
      read line
      if [[ $line  =~ ([nN]) ]] ; then
        exit
      fi
    fi
  else
    echo "Please enter the correct address"
  fi
  done
fi



suffix=`expr 32 - $prefix`
pnum=$((2**suffix))
pnum=$((pnum-2))
declare -i i=0
while [[ $i -lt $pnum ]]
do
  i=$((i+1))
  if [ $p4 -lt 255 ] ; then
    p4=$((p4+1))
  elif [ $p3 -lt 255 ] ; then
    p3=$((p3+1))
  elif [ $p2 -lt 255 ] ; then
    p2=$((p2+1))
  elif [ $p1 -lt 255 ] ; then
    p1=$((p1+1))
  else
    echo "out range"
    break;
  fi
  {
  dst_addr="$p1.$p2.$p3.$p4"
  ping -c 4 $dst_addr  >> /dev/null  2>&1
  if [ $? == 0 ] ; then 
    echo "$dst_addr"
  else
    exit 1
  fi
  } &
  pids+=($!)
done
wait ${pids[@]}
echo "end"
